{"version":3,"sources":["components/PhoneBock.module.css","Redux/phonebook/phonebook-actions.js","Redux/phonebook/phonebook-reducer.js","Redux/store.js","components/Form.js","components/ContactList.js","components/SearchContact.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","onDeleted","veluesFilter","contacts","createReducer","actions","state","filter","_","combineReducers","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","phonebook","persistReducer","phonebookReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","connect","contactList","dispatch","onSubmit","newName","some","onCheckName","phonebookActions","alert","useState","setName","setNumber","InputValues","e","currentTarget","value","resetInputValues","idName","idNumber","className","s","form","lengthInputNemeChech","length","lengthInputNumberChech","preventDefault","htmlFor","labelName","type","onChange","autoComplete","labelNumber","placeholder","pattern","btnForm","getFilterContacts","allContacts","normalizeFilter","toLowerCase","contact","includes","map","href","btnList","onClick","searchContact","target","containerSearch","labelSearch","inputSearch","Mobile","container","headingForm","ContactList","ReactDOM","render","loading","document","querySelector"],"mappings":"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","file":"static/js/main.8b96c68f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBock_container__14l9u\",\"headingForm\":\"PhoneBock_headingForm__zO42L\",\"contactList\":\"PhoneBock_contactList__Kk9AS\",\"form\":\"PhoneBock_form__1ftvy\",\"labelName\":\"PhoneBock_labelName__1AKts\",\"labelNumber\":\"PhoneBock_labelNumber__2hckR\",\"btnForm\":\"PhoneBock_btnForm__2ugqK\",\"containerSearch\":\"PhoneBock_containerSearch__27cOg\",\"btnList\":\"PhoneBock_btnList__3an8w\"};","import types from \"./phonebook-types\";\r\nimport shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"phonebook/addContact\", (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\n// const addContact = (name, number) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\nconst onDeleted = createAction(\"phonebook/deletedContact\");\r\n\r\n// const onDeleted = (contactId) => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\nconst veluesFilter = createAction(\"phonebook/veluesFilter\");\r\n\r\n// const veluesFilter = (value) => ({\r\n//   type: types.VALUES_FILTER,\r\n//   payload: value,\r\n// });\r\n\r\nexport default { addContact, onDeleted, veluesFilter };\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport actions from \"./phonebook-actions\";\r\n\r\n// import types from \"./phonebook-types\";\r\n\r\nconst contacts = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [actions.onDeleted]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.veluesFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n// const contacts = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [payload, ...state];\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n//   console.log(payload);\r\n// };\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case \"phonebook/veluesFilter\":\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n// import { createStore, combineReducers } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\n\r\n// const rootReducer = combineReducers();\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nconst phonebookPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport phonebookActions from \"../Redux/phonebook/phonebook-actions\";\n\nimport shortid from \"shortid\";\nimport s from \"./PhoneBock.module.css\";\n\nfunction Form({ contactList, onSubmit }) {\n  const [newName, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const InputValues = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const addContact = (e) => {\n    const lengthInputNemeChech = newName.length;\n    const lengthInputNumberChech = number.length;\n    e.preventDefault();\n    if (lengthInputNemeChech < 2 || lengthInputNemeChech > 10) {\n      alert('Введіть ім\"я більше 1-го символа і не більше 10');\n      return;\n    }\n    if (lengthInputNumberChech < 7 || lengthInputNumberChech > 10) {\n      alert(\"Введіть номер більше 7-ми цифр і не більше 10\");\n      return;\n    }\n\n    onSubmit(newName, number, contactList);\n    resetInputValues();\n  };\n\n  const resetInputValues = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const idName = shortid.generate();\n  const idNumber = shortid.generate();\n  return (\n    <form className={s.form} onSubmit={addContact}>\n      <label htmlFor={idName} className={s.labelName}>\n        Им'я\n      </label>\n      <input\n        id={idName}\n        type=\"text\"\n        name=\"name\"\n        value={newName}\n        onChange={InputValues}\n        autoComplete=\"off\"\n      ></input>\n      <label htmlFor={idNumber} className={s.labelNumber}>\n        Номер\n      </label>\n      <input\n        id={idNumber}\n        placeholder=\"(0xx) xxx-xx-xx\"\n        type=\"tel\"\n        pattern=\"^[ 0-9]+$\"\n        name=\"number\"\n        value={number}\n        onChange={InputValues}\n        autoComplete=\"off\"\n      ></input>\n      <button className={s.btnForm} type=\"submite\">\n        Додати контакт\n      </button>\n    </form>\n  );\n}\n\nconst onCheckName = (contactList, newName) => {\n  return contactList.some(({ name }) => name === newName);\n};\n\nconst mapStateToProps = (state) => ({\n  contactList: state.phonebook.contacts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (newName, number, contactList) => {\n    if (onCheckName(contactList, newName)) {\n      alert('Це ім\"я вже існує');\n      return;\n    }\n    dispatch(phonebookActions.addContact(newName, number));\n  },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport phonebookActions from \"../Redux/phonebook/phonebook-actions\";\n\nimport s from \"./PhoneBock.module.css\";\n\nconst СontactList = ({ contactList, onDeleted }) => {\n  return (\n    <ul className={\"js-list\"}>\n      {contactList.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            <span>{name}: </span>\n            <span>\n              +38 <a href={`tel: ${number}`}>{number}</a>\n            </span>\n            <button\n              className={s.btnList}\n              type=\"button\"\n              onClick={() => onDeleted(id)}\n            >\n              Видалити\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nconst getFilterContacts = (allContacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n\n  return allContacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n};\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\n  contactList: getFilterContacts(contacts, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleted: (id) => dispatch(phonebookActions.onDeleted(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(СontactList);\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport phonebookActions from \"../Redux/phonebook/phonebook-actions\";\n\nimport s from \"./PhoneBock.module.css\";\nimport { connect } from \"react-redux\";\n\nfunction SearchContact({ value, searchContact }) {\n  const id = shortid.generate();\n  return (\n    <div className={s.containerSearch}>\n      <label className={s.labelSearch} htmlFor={id}>\n        Поиск контакта по имени\n      </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={searchContact}\n        id={id}\n        className={s.inputSearch}\n      ></input>\n    </div>\n  );\n}\n// SearchContact.propTypes = {\n//   velue: PropTypes.string.isRequired,\n//   SearchContact: PropTypes.func.isRequired,\n// };\n\nconst mapStateToProps = (state) => ({\n  value: state.phonebook.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  searchContact: (e) => dispatch(phonebookActions.veluesFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchContact);\n","// import { useState, useEffect } from \"react\";\n// import shortid from 'shortid';\nimport s from \"./components/PhoneBock.module.css\";\n\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport SearchContact from \"./components/SearchContact\";\n\nexport default function Mobile() {\n  return (\n    <div className={s.container}>\n      <h1 className={s.headingForm}>Телефонна книга</h1>\n      <Form />\n      {/* <Form onSubmit={addContact} contactList={onCheckName} /> */}\n      {/* <SearchContact velue={filter} SearchContact={veluesFilter} /> */}\n      {/* <ContactList contactList={getFilter()} onDeleted={deletedContact} /> */}\n      <h2 className={s.contactList}>Контакти</h2>\n      <SearchContact />\n      <ContactList />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <PersistGate loading={null} persistor={store.persistor}>\n    <Provider store={store.store}>\n      <App />\n    </Provider>\n  </PersistGate>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}